import numpy as np

def seidel(A, b, tol=0.01, max_iterations=1000):
    n = len(A)
    x = np.zeros_like(b, dtype=np.double)
    
    for k in range(max_iterations):
        x_old = x.copy()
        
        for i in range(n):
            sum1 = sum(A[i][j] * x[j] for j in range(i))
            sum2 = sum(A[i][j] * x_old[j] for j in range(i + 1, n))
            x[i] = (b[i] - sum1 - sum2) / A[i][i]
        
        if np.linalg.norm(x - x_old, ord=np.inf) < tol:
            break
    
    return x

A = np.array([
    [15, 3, 5, 5],
    [7, -15, -6, 1],
    [-4, 7, -19, -6],
    [3, -5, 0, 8]
])

b = np.array([36, -112, 19, -23])

solution = seidel(A, b, tol=0.01)

print("Решения системы методом Зейделя:")
for i, val in enumerate(solution):
    print(f"x{i+1} = {val:.2f}")
