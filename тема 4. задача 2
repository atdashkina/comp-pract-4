#include <iostream>
#include <vector>
#include <cmath>
#include <iomanip>

using namespace std;

double determinant(vector<vector<double>> &matrix) {
    int n = matrix.size();
    vector<vector<double>> temp = matrix;
    double det = 1;
    for (int i = 0; i < n; i++) {
        int k = i;
        for (int j = i + 1; j < n; j++) {
            if (abs(temp[j][i]) > abs(temp[k][i])) {
                k = j;
            }
        }
        if (abs(temp[k][i]) < 1e-9) {
            return 0;
        }
        swap(temp[i], temp[k]);
        if (i != k) {
            det = -det;
        }
        det *= temp[i][i];
        for (int j = i + 1; j < n; j++) {
            temp[i][j] /= temp[i][i];
        }
        for (int j = 0; j < n; j++) {
            if (j != i && abs(temp[j][i]) > 1e-9) {
                for (int l = i + 1; l < n; l++) {
                    temp[j][l] -= temp[i][l] * temp[j][i];
                }
            }
        }
    }
    return det;
}

vector<double> cramer(vector<vector<double>> &matrix, vector<double> &b) {
    int n = matrix.size();
    vector<double> result(n);
    double detA = determinant(matrix);
    if (abs(detA) < 1e-9) {
        throw runtime_error("Система не имеет уникального решения.");
    }
    for (int i = 0; i < n; i++) {
        vector<vector<double>> temp = matrix;
        for (int j = 0; j < n; j++) {
            temp[j][i] = b[j];
        }
        result[i] = determinant(temp) / detA;
    }
    return result;
}

int main() {
    vector<vector<double>> matrix = {
        {-10, -1, 3},
        {8, 7, 2},
        {6, 6, 2}
    };
    vector<double> b = {-1, 0, 2};

    try {
        vector<double> result = cramer(matrix, b);
        cout << "Решения системы методом Крамера:" << endl;
        for (int i = 0; i < result.size(); i++) {
            cout << "x" << i + 1 << " = " << result[i] << endl;
        }
    } catch (runtime_error &e) {
        cout << e.what() << endl;
    }

    return 0;
}

